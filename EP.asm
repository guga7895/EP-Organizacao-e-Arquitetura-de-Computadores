#ALGUMAS INSTRUÇÕES REFERENTES A ALTERAÇÕES:
#É POSSÍVEL AUMENTAR O TAMANHO DO VETOR, PORÉM, SE AUMENTAR A VARIAVEL $tamVetor,TAMBÉM ALTERE A VARIAVEL $vetor COM O NÚMERO DE ELEMENTOS CERTO
#A VARIÁVEL K, POR DEFINIÇÃO, PRECISA SER UM VALOR MAIOR OU IGUAL A 0 E ESTRITAMENTE MENOR QUE O VALOR DA VARIÁVEL $k
#A VARIÁVEL $menorElem PRECISA SER ESTRITAMENTE MAIOR QUE QUALQUER VALOR DE QUALQUER ELEMENTO DO VETOR

.text
.globl main

main:
	li $a0,0 #INICIA CONTADOR DE PERCORRER O VETOR
	la $a1,$vetor #APONTA O ENDEREÇO DO INICIO DO VETOR PARA a1
	ld $a2,$tamVetor #ARMAZENA O TAMANHO DO VETOR EM a2
	li $a3,0 #INDICE DO MENOR ELEMENTO DO VETOR
	l.s $f4, $menorElem #ARMAZENA A VARIAVEL QUE REPRESENTARÁ O MENOR ELEMENTO DO VETOR
	subu $sp, $sp, 4  #ABRE 1 ESPAÇO NA PILHA
	sw $a2, 0($sp) #SALVA O TAMANHO DO VETOR NO ESPAÇO 0 DO STACK POINTER (PASSAREMOS O TAMANHO COMO PARAMETRO PARA FUNÇOES DE PERCORRER)
	jal percorreVetorAntesDeK #CHAMA A FUNÇÃO QUE VAI PERCORRER O VETOR ATÉ ELE PASSAR DO ÍNDICE K DO ENUNCIADO
	addiu $sp, $sp, 4 #RECUPERA O ESPAÇO ATÉ ENTÃO OCUPADO NA PILHA
	add $a0, $a3, $zero #ADICIONAMOS NO REGISTRADOR a0 O INDICE DO MENOR ELEMENTO DO VETOR ARMAZENADO EM a3
	li $v0, 1 #COLOCAMOS O CÓDIGO 1 DE SYSCALL NO v0 (PARA PRINTAR CONTEUDO DE a0)
	syscall #PRINTADO O CONTEUDO DE a0 (INDICE DO MENOR ELEMENTO DO VETOR)
	li $v0, 10 #COLOCAMOS O CÓDIGO 10 DE SYSCALL NO v0 (ENCERRAR PROGRAMA)
	syscall #ENCERRA PROGRAMA
	
percorreVetorAntesDeK:
	ld $a2, $k  #SALVA NO a2 O VALOR K DO ENUNCIADO
	blt $a0, $a2, proximaPosVetor #SE O CONTADOR FOR MENOR QUE O VALOR DE K DO ENUNCIADO, CONTINUAR AVANÇANDO UMA CASA NO VETOR
	j percorreAposK #CHAMA A FUNÇÃO QUE RECUPERA OS PARAMETROS a2 E a3 QUE ESTAVAM NA PILHA

percorreAposK:
	lw $a2, 0($sp) #RECUPERA O TAMANHO DO VETOR NA PILHA
	l.s $f2, ($a1) #RECUPERA O VALOR APONTADO PELO PONTEIRO DA POSIÇÃO ATUAL DO VETOR
	addi $a0, $a0, 1 #INCREMENTA O CONTADOR DE PERCORRER O VETOR
	bgt $a0, $a2, retornaMain #CHECA SE PERCORREMOS TODO O VETOR, SE SIM, RETORNAMOS PARA A MAIN
	c.lt.s $f2,$f4 #SE O VALOR DE $f2 (VALOR ATUAL DO VETOR) FOR MENOR QUE O VALOR DE $f4(MENOR VALOR ATE ENTÃO), COLOCA BIT 1 NA CONDITION FLAG 0
	bc1t trocaMenor #SE O VALOR DO BIT NO CONDITION FLAG 0 FOR 1, JUMP PRA trocaMenor, SE NÃO, CONTINUA O PROGRAMA NORMALMENTE
	addi $a1, $a1, 4 #ANDAMOS UMA POSIÇÃO NO VETOR
	j percorreAposK #CONTINUAREMOS CHAMANDO A FUNÇÃO ATÉ QUE O CONTADOR SE TORNE MAIOR QUE O TAMANHO DO VETOR(VOLTAREMOS PARA O MAIN)
	
trocaMenor:
	l.s $f4, ($a1) #TROCAMOS O VALOR DO MENOR VALOR COM O VALOR APONTADO POR a1(PONTEIRO PARA O VETOR)
	addi $a1, $a1, 4 #ANDAMOS UMA POSIÇÃO NO VETOR
	addi $a3, $a0, -1 #SALVAMOS O INDICE DO MENOR ELEMENTO EM a3 (SUBTRAIMOS -1 POIS O CONTADOR DE PERCORRER (a0) É SEMPRE UM A MAIS QUE O INDICE)
	j percorreAposK #CONTINUAMOS PERCORRENDO ATÉ QUE ACABEMOS O VETOR
	
proximaPosVetor:
	addi $a1, $a1, 4 #MOVE O PONTEIRO DO VETOR PARA O PRÓXIMO VALOR
	addi $a0, $a0, 1 #ACRESCENTA 1 NO CONTADOR DE PERCORRIMENTO DO VETOR
	j percorreVetorAntesDeK #CONTINUAMOS PERCORRENDO ATÉ QUE O CONTADOR ULTRAPASSE K

retornaMain:
	jr $ra #RETORNAMOS PARA A MAIN APÓS PERCORREMOS TODO O VETOR
		
.data
$vetor: .float 20.0, 4.1, 4.3, 6.1, 6.3, 7.8, 2.1 #VETOR
$tamVetor: .word 7 #TAMANHO DO VETOR
$k: .word 2 #VALOR K DO ENUNCIADO (PODE MUDAR PARA QUALQUER VALOR) >= 0 e < tamVetor)
$menorElem: .float 809.53 #NUMERO GRANDE USADO PARA FAZER A PRIMEIRA TROCA DOS MENORES VALORES (PRECISA SEMPRE SER MAIOR QUE O MAIOR ELEM DO VETOR)
